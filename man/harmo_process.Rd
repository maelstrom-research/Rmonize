% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02-harmo_process_harmonization.R
\name{harmo_process}
\alias{harmo_process}
\title{Generate harmonized dataset(s) and annotated Data Processing Elements}
\usage{
harmo_process(
  dossier,
  dataschema = attributes(dossier)$`Rmonize::DataSchema`,
  data_proc_elem = attributes(dossier)$`Rmonize::Data Processing Elements`,
  harmonized_col_dataset = attributes(dossier)$`Rmonize::harmonized_col_dataset`
)
}
\arguments{
\item{dossier}{List of tibble(s), each of them being datasets to be
harmonized.}

\item{dataschema}{A list of tibble(s) representing metadata of an
associated harmonized dossier.}

\item{data_proc_elem}{A tibble, identifying the input
Data Processing Elements.}

\item{harmonized_col_dataset}{A character string identifying the name of the
column present in every dataset as identifier of the dataset name.}
}
\value{
A list of tibbles of each harmonized dataset that has been harmonized from
input datataset.
}
\description{
Reads the DataSchema and Data Processing Elements objects to generate
harmonized dataset(s) and annotated Data Processing Elements object with
harmonization statuses and any processing errors. The function uses
the DataSchema and Data Processing Elements specifications to process
input variables into output harmonized variables for each dataset.
Documentation of each data processing action is generated in the console to
support the identification of errors and correction of
the Data Processing Elements file and objects, as needed. An
annotated Data Processing Elements is also produced, providing harmonization
statuses (complete/impossible) for each DataSchema variable in input
dataset, which can be used to create a summary of the harmonization
potential of the DataSchema variables across input dataset(s).
}
\details{
A dossier must be a named list containing at least one data frame or
data frame extension (e.g. a tibble), each of them being datasets.
The name of each tibble will be use as the reference name of the dataset.

A DataSchema defines the harmonized variables to be generated, and also
represents metadata of an associated harmonized dossier. It must be a list
of data frame or data frame extension (e.g. a tibble) objects with elements
named "Variables" (required) and "Categories" (if any). The "Variables"
element must contain at least the \code{name} column, and the "Categories" element
must contain at least the \code{variable} and \code{name} columns to be usable in any
function. To be considered as a minimum workable DataSchema, in "Variables"
the \code{name} column must also have unique and non-null entries, and in
"Categories" the combination of \code{variable} and \code{name} columns must also be
unique.

A Data Processing Elements contains the rules and metadata that will be used
to perform harmonization of input datasets in accordance with the DataSchema.
It must be a data frame or data frame extension (e.g. a tibble) and it must
contain certain columns which participate to the process, including the
\code{dataschema_variable}, \code{input_dataset},\code{input_variables},
\code{Mlstr_harmo::rule_category} and  \code{Mlstr_harmo::algorithm}. The mandatory
first processing element must be "id_creation" in
\code{Mlstr_harmo::rule_category} followed by the name of the column taken as
identifier of each dataset to initiate the process of harmonization.
}
\examples{
{

# You can use our demonstration files to run examples

library(dplyr)
library(madshapR) # data_dict_filter

dataset_MELBOURNE <- Rmonize_DEMO$dataset_MELBOURNE[1]
dossier <- dossier_create(list(dataset_MELBOURNE))

dataschema <- 
  Rmonize_DEMO$`dataschema - final` \%>\%
  data_dict_filter('name == "adm_unique_id"')

data_proc_elem <- Rmonize_DEMO$`data_processing_elements - final` \%>\%
  dplyr::filter(dataschema_variable == 'adm_unique_id',
         input_dataset == 'dataset_MELBOURNE')

# perform harmonization
harmo_process(dossier,dataschema,data_proc_elem)

}

}
